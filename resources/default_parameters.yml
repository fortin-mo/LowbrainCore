# maximum : the best value possible
# minimum : the worst value possible
# variables : the amounts by wich the specific attribute is multiplied by to calculate the x value
# range : creates a range and get a random number in that range
#
# function: you can use your own string function if you want to. If a function is defines it will automatically be used
# instead of variables
# function format goes like this : 0.5 * {0} + 0.5 * {1} + 10, strength, dexterity
#
# ex:
#   by_projectile:
#     enable: true
#     function:
#     variables:
#       strength: 0.333
#       dexterity: 0.666
#     maximum: 2.5
#     minimum: 0.05
#     range: 2.0
#
# if there is no range. the damage is just multiplied
# if a range is set, (higher than 0) a random value between the maximum range and minimum will be calculated

# all function type possible
# function_type 0 = linear : a x + b
# function_type 1 = cubic : a x^2 + b ==> difference between level 1 and 2 is lower then level 99 and 100
# function_type 2 = square : a x^0.5 + b ==> difference between level 1 and 2 is higher then level 99 and 100

# range_type 0 = randomize multiplier
# range_type 1 = randomize value (after multiplier is applied)


# for information on function type look at the top of the page
function_type: 1

# level multiplier. next level = (current level * multiplier) + current level
next_lvl_multiplier: 1.1

# multiplier by which natural occurring experience(mob kill, mining, farming, etc) is multiply
natural_xp_gain_multiplier: 1.0

# define player courage statistics
courage:
 # enable or disable this functionality
 enable: true
 # initial value for each player
 initial: 0
 # define gain of courage for each type of mobs... Default for default value
 on_mob_kills:
  default: 2
  # bat: 1
  # wither: 10
 # define gain of courage on death
 on_death: -2
 on_player_kill: # currently not customizable

# define player reputation statistics
reputation:
 # enable or disable this functionality
 enable: true
 # initial value for each player
 initial: 0
 # define gain of reputation for each type of mobs... Default for default value
 on_mob_kills:
  default: 1
  # bat: 1
  # wither: 10
 # define gain of reputation on death
 on_death: -1
 on_player_kill: # currently not customizable
 # define status based on reputation
 # you can implement infinite numbers of status, you just need to list them as follow
 # each status as an interval ('from' to 'to), use -inf for -negative infinite and +inf for positive infinite
 # reputation status can be used for item requirements
 status:
  civil:
   from: -10
   to: 10
  savior:
   from: 11
   to: +inf
  deamon:
   from: -11
   to: -inf

# mathematics to when player kills another player
on_player_kills_player:
 enable: true
 # the initial amount of experience gained on kill
 base_exp: 25
 # multiplier by which base exp is multiply by level
 killer_level_gain_multiplier: 0.5
 # multiplier by which base exp is multiply by level difference between players (low lvl player kill high lvl player = higher exp gain and vice-versa)
 level_difference_multiplier: 0.5

# mathematic to when a player attack another entity
# maximum doesnt necesseraly mean the higher value possible. it is meant to be the best value possible
on_player_attack_entity:

 # enable critical hit
 critical_hit:
  enable: true
  chance:
   function:
   maximum: 0.15
   minimum: 0
   range: 0
   variables:
    agility: 0.25
    intelligence: 0.5
    dexterity: 0.25
 # the multipler apply to the damage when a player succeed a critical hit
  damage_multiplier:
   function:
   maximum: 1.75
   minimum: 1.25
   range: 0.05
   variables:
    agility: 0.25
    intelligence: 0.25
    dexterity: 0.5

 # enable player to have a chance to apply magic(potion) effect
 chance_of_creating_magic_attack:
  function:
  maximum: 0.5
  minimum: 0.0
  variables:
   intelligence: 1.0

 # in case of magic attack succeeded, craete the potion effect depending on variables
 # to better understand effect level, look for the minecraft potion effect wiki on internet
 creating_magic_attack:
  enable: true
  # the duration of the effect (in seconds)
  duration:
   maximum: 10.0
   minimum: 0.05
   variables:
    intelligence: 0.75
    dexterity: 0.25

  # you can specify for each type of effect, the maximum and minimum level, and the variables
  harm:
   enable: true
   maximum: 3
   minimum: 0
   variables:
    intelligence: 1.0
  # maximum and minimum have no effect on blindness effect
  blindness:
   enable: true
   maximum: 4
   minimum: 0
   variables:
    intelligence: 1.0
  # maximum and minimum have no effect on confusion effect
  confusion:
   enable: true
   maximum: 4
   minimum: 0
   variables:
    intelligence: 1.0
  slow:
   enable: true
   maximum: 5
   minimum: 0
   variables:
    intelligence: 1.0
  poison:
   enable: true
   maximum: 4
   minimum: 0
   variables:
    intelligence: 1.0
  weakness:
   enable: true
   maximum: 5
   minimum: 0
   variables:
    intelligence: 1.0
  wither:
   enable: true
   maximum: 5
   minimum: 0
   variables:
    intelligence: 1.0

 # mathematics to when a player attack an entity with a weapon (sword, axe, any other type of weapon hit)
 by_weapon:
  enable: true
  function:
  maximum: 2.5
  minimum: 0.05
  range: 0.015
  variables:
   strength: 1.0

 # mathematics to when a player attack an entity with a magic item (potion, flame, etc)
 by_magic:
  enable: true
  function:
  maximum: 2.5
  minimum: 0.05
  range: 0.015
  variables:
   intelligence: 0.85
   dexterity: 0.15

 # mathematics to when a player attack an entity with a projectile (mainly arrows)
 by_projectile:
  enable: true
  function:
  maximum: 1.5
  minimum: 0.05
  range: 0.015
  variables:
   strength: 0.34
   dexterity: 0.66

 # enable missing attack. the values are the amount of chance a player can miss an attack
 # when the entity is an other player, it will be merge with the chance to dodge an attack of the other player
 chance_of_missing:
  enable: true
  function:
  maximum: 0.01
  minimum: 0.15
  variables:
   agility: 1

 # enable backstab damage booster
 # by default backstab multiply damage by 1.15 but you can still modify it
 backstab:
  enable: true
  function:
  maximum: 1.15
  minimum: 1.15
  range: 0
  variables:

# mathematics to when a player gets damaged (any source)
on_player_get_damaged:
 # you can specify the damage multipliers for each source of damage
 # you can specify a default. if the default is enabled, it will be used whenever the source is not defined here
 # if you delete a section (source) it will do the same as disabelling it
 by_magic:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   intelligence: 0.15
   magic_resistance: 0.85

 by_poison:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   intelligence: 0.15
   magic_resistance: 0.85

 by_wither:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   intelligence: 0.15
   magic_resistance: 0.85

 by_void:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 1.0

 by_fire:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 0.25
   magic_resistance: 0.6
   intelligence: 0.15

 by_lava:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 0.25
   magic_resistance: 0.6
   intelligence: 0.15

 by_lightning:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 0.25
   magic_resistance: 0.6
   intelligence: 0.15

 by_hot_floor:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 0.4
   magic_resistance: 0.45
   intelligence: 0.15

 by_fire_tick:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 0.25
   magic_resistance: 0.6
   intelligence: 0.15

 by_explosion:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 0.85
   strength: 0.15

 by_fall:
  enable: true
  function:
  maximum: 0.5
  minimum: 1.0
  variables:
   defence: 0.25
   agility: 0.75

 by_fly_into_wall:
  enable: true
  function:
  maximum: 0.5
  minimum: 1.0
  variables:
   defence: 0.75
   agility: 0.25

 by_contact:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 1.0

 by_arrow:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 1.0

 by_projectile:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 1.0

 by_weapon:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 1.0

 by_suffocation:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 0.15
   agility: 0.15
   intelligence: 0.70

 by_starvation:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  variables:
   defence: 0.15
   agility: 0.15
   intelligence: 0.70

 by_drowning:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 0.15
   agility: 0.15
   intelligence: 0.70

 # set a default values
 by_default:
  enable: true
  function:
  maximum: 0.3333
  minimum: 1.0
  variables:
   defence: 1.0

 # when a player get it, it has the possibility to reduce bad potion effect
 # it wont reduce the level but the duration
 reducing_bad_potion_effect:
  enable: true
  function:
  maximum: 0.333
  minimum: 1.0
  range: 0.15
  variables:
   magic_resistance: 0.75
   intelligence: 0.25

 # it also has the chance to remove completitly the effects
 chance_of_removing_magic_effect:
  enable: true
  function:
  maximum: 0.5
  minimum: 0.0
  variables:
   magic_resistance: 0.70
   intelligence: 0.2
   dexterity: 0.1

# the chance to dodge an attack
 chance_of_dodging:
  enable: true
  function:
  maximum: 0.15
  minimum: 0.01
  variables:
   agility: 1

# mathematics to when a player shoots with a bow
on_player_shoot_bow:
 enable: true
 # precision will affect arrow vector(directon) on both x and y axes
 precision:
  function:
  minimum: 0.25
  maximum: 1
  variables:
   dexterity: 1
  range: 0.05
 # the speed will affect the arrow vector velocity
 speed:
  function:
  maximum: 2.0
  minimum: 0.5
  variables:
   strength: 0.666
   dexterity: 0.333
  range: 0.05

# mathematics to when a player consume a potion
# will affect potion duration and level on consuming
on_player_consume_potion:
 enable: true
 function:
 range: 0.1
 maximum: 2.0
 minimum: 1.0
 variables:
  intelligence: 1.0

# mathematics to when a player dies
on_player_dies:
 enable: true
 # percentage of experience a player lose on death
 xp_loss: 15

 # item drop will affect the amount of dropped item
 # minimum value of 1 means a player will lose 100% of his inventory
 # maximum value of 0.1 means a player will only lose 10% of his inventory
 items_drops:
  enable: true
  maximum: 0.1
  minimum: 1
  variables:
   intelligence: 0.85
   agility: 0.15

# mathematics to all generic player attributes
# google minecraft generic attributes for more informations
player_attributes:
 movement_speed:
  enable: true
  function:
  maximum: 0.3
  minimum: 0.2
  variables:
   agility: 1.0
 attack_speed:
  enable: true
  function:
  maximum: 7
  minimum: 3
  variables:
   agility: 0.85
   dexterity: 0.15
 total_mana:
  enable: true
  function:
  #max and min for mana isn't use, (use race base and max mana instead)
  maximum: 50
  minimum: 10
  variables:
   intelligence: 1.0
 total_health:
  enable: true
  function:
  #max and min for health isn't use, (use race base and max health instead)
  maximum: 50
  minimum: 10
  variables:
   vitality: 1.0
 mana_regen:
  enable: true
  function:
  maximum: 2.5
  minimum: 0.0
  variables:
   intelligence: 1.0
 luck:
  enable: true
  function:
  maximum: 512
  minimum: 0
  variables:
   intelligence: 0.85
   agility: 0.15
 knockback_resistance:
  enable: true
  function:
  maximum: 0.99
  minimum: 0.0
  variables:
   strength: 0.5
   defence: 0.5